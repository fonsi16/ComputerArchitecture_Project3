C51 COMPILER V9.60.7.0   PROJETO                                                           05/23/2024 13:28:36 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PROJETO
OBJECT MODULE PLACED IN .\Objects\projeto.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE projeto.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\p
                    -rojeto.lst) TABS(2) OBJECT(.\Objects\projeto.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          // Constantes
   4          #define maxContams 10
   5          #define maxSegundos 5
   6          
   7          #define A 0
   8          #define B 1
   9          #define C 2
  10          #define D 3 
  11          
  12          // 65536 - 10000 = 55536 -> D8F0
  13          //interrupção de 0.01 em 0.01 ssegundos
  14          #define TempH 0xD8
  15          #define TempL 0xF0
  16          
  17          // Pinos dos botões
  18          sbit BA = P3^4;
  19          sbit BB = P3^5;
  20          sbit BC = P3^6;
  21          sbit BD = P3^7;
  22          
  23          // Pinos dos displays de 7 segmentos
  24          sbit segA1 = P1^0;
  25          sbit segB1 = P1^1;
  26          sbit segC1 = P1^2;
  27          sbit segD1 = P1^3;
  28          sbit segE1 = P1^4;
  29          sbit segF1 = P1^5;
  30          sbit segG1 = P1^6;
  31          sbit segDP1 = P1^7;
  32          
  33          sbit segA2 = P2^0;
  34          sbit segB2 = P2^1;
  35          sbit segC2 = P2^2;
  36          sbit segD2 = P2^3;
  37          sbit segE2 = P2^4;
  38          sbit segF2 = P2^5;
  39          sbit segG2 = P2^6;
  40          sbit segDP2 = P2^7;
  41          
  42          // Estados do sistema
  43          bit estado = 0;
  44          bit estadoOp = 0;
  45          
  46          // Variáveis globais
  47          unsigned char contaCS = 0;    //conta centesimas de segundo
  48          unsigned char contaDS = 0;    //conta decimas de segundo
  49          unsigned char contaDSop = 0;  //conta decimas de segundo no modo para mostrar resposta
  50          unsigned char contaS = 0;     //conta segundoS
  51          unsigned char resposta = 4;   // Inicialmente é o traço '-'
  52          
  53          // Segmentos dos displays
  54          
C51 COMPILER V9.60.7.0   PROJETO                                                           05/23/2024 13:28:36 PAGE 2   

  55          
  56          void Init(void) {
  57   1        
  58   1        estado = 0;
  59   1        estadoOp = 0;
  60   1        
  61   1        contaDS = 0;
  62   1        contaCS = 0;
  63   1        contaDSop = 0;
  64   1        contaS = 0;
  65   1        resposta = 4;
  66   1      
  67   1        // Configuração do Registo IE
  68   1        EA = 1; // ativa interrupções globais
  69   1        ET0 = 1; // ativa interrupção Timer 0
  70   1        EX0 = 1; // ativa interrupção externa 0
  71   1        EX1 = 0; // desativa interrupção externa 1
  72   1      
  73   1        // Configuração Registo TMOD
  74   1        TMOD = 0x01; // Timer 0 no modo 1 (16 bits)
  75   1      
  76   1        // Configuração Timer 0
  77   1        TH0 = TempH;
  78   1        TL0 = TempL;
  79   1      
  80   1        // Configuração Registo TCON
  81   1        TR0 = 0; // Timer 0 começa desligado
  82   1        IT0 = 1; // Interrupção externa 0 ativa no falling edge
  83   1      }
  84          
  85          void Externall0_ISR(void) interrupt 0 {
  86   1        TR0 = 1;      // Inicia o Timer 0
  87   1        EX0 = 0;      // Desativa interrupção externa 0
  88   1        EX1 = 1;      // Ativa interrupção externa 
  89   1        estado = 0;
  90   1        contaCS = 0;
  91   1      }
  92          
  93          void Timer0_ISR(void) interrupt 1 {
  94   1      
  95   1        IE0 = 0; // Limpa flag se P3.2 foi pressionado (ruido botao)
  96   1      
  97   1        TH0 = TempH;
  98   1        TL0 = TempL;
  99   1      
 100   1        contaCS++;                        //incrementa o contar de centesimas de segundo
 101   1        if (contaCS == maxContams) {      //contador centesimas de segundo = 10
 102   2          contaCS = 0;                    //centesimas de segundo = 0                 
 103   2          if (estado == 0) {              //caso o estado = 0(Modo escolhe pergunta)
 104   3            contaDS++;                    //incrementa o contador de decimas de segundo
 105   3            if (contaDS == 1){            //caso aumente uma decima de segundo e é igual 1 (5.0 -> 4.9) o contador dos se
             -gundos tem de incrementar
 106   4              contaS++;                   //incrementa o contador de segundos
 107   4            }
 108   3            if(contaDS == maxContams){    //caso o contador das decimas de segundo cheguem ao máximo -> 10
 109   4              contaDS = 0;                //o contador de decimas de segundo vai resetar
 110   4              if(contaS == maxSegundos){  //caso chegue aos 5 segundos e decimas de segundo a 10 ou seja 0.0
 111   5                estado = ~estado;         //o estado irá passar de 0 para 1
 112   5                EX0 = 1;                  //a interrupção externa 0 irá ser ativada porque chegou ao final
 113   5                EX1 = 0;                  //desabilita a interrupção externa 1 porque não pode escolher nenhuma opção
 114   5              }
 115   4            }
C51 COMPILER V9.60.7.0   PROJETO                                                           05/23/2024 13:28:36 PAGE 3   

 116   3          }
 117   2          else{                           //caso o estado = 1(modo mostra pergunta)
 118   3            contaDSop++;                  //incrementa o contador de decimas de segundo para o modo de mostrar a opção
 119   3            if(contaDSop == maxContams){  //caso chegue a 10, ou seja, passe 1 segundo
 120   4              contaDSop = 0;              //contador de decimas de segundo = 0
 121   4              estadoOp = ~estadoOp;       //o estado de op muda para o inverso
 122   4            }
 123   3          }
 124   2        }
 125   1      }
 126          
 127          void Externall1_ISR(void) interrupt 2 {
 128   1        contaCS = 0;
 129   1        estado = 1;
 130   1        EX1 = 0; // desativa interrupção externa 1
 131   1        EX0 = 1; // Ativa interrupção externa 0
 132   1      
 133   1        if (BA == 0) resposta = A; // Botão A pressionado
 134   1        else if (BB == 0) resposta = B; // Botão B pressionado
 135   1        else if (BC == 0) resposta = C; // Botão C pressionado
 136   1        else if (BD == 0) resposta = D; // Botão D pressionado
 137   1        
 138   1      }
 139          
 140          void atualizaDisplay1(unsigned char valor) {
 141   1        code unsigned segments[6][8] = {
 142   1          {0,1,0,0,1,0,0,0},  //5.
 143   1          {1,0,0,1,1,0,0,0},  //4.
 144   1          {0,0,0,0,1,1,0,0},  //3.
 145   1          {0,0,1,0,0,1,0,0},  //2.
 146   1          {1,0,0,1,1,1,1,0},  //1.
 147   1          {0,0,0,0,0,0,1,0},  //0.
 148   1        };
 149   1        segA1 = segments[valor][0];
 150   1        segB1 = segments[valor][1];
 151   1        segC1 = segments[valor][2];
 152   1        segD1 = segments[valor][3];
 153   1        segE1 = segments[valor][4];
 154   1        segF1 = segments[valor][5];
 155   1        segG1 = segments[valor][6];
 156   1        segDP1 = segments[valor][7];  
 157   1      }
 158          
 159          void atualizaDisplay2(unsigned char valor) {
 160   1          code unsigned segments[10][8] = {
 161   1          {0,0,0,0,0,0,1,1},  //0
 162   1          {0,0,0,0,1,0,0,1},  //9
 163   1          {0,0,0,0,0,0,0,1},  //8
 164   1          {0,0,0,1,1,1,1,1},  //7
 165   1          {0,1,0,0,0,0,0,1},  //6
 166   1          {0,1,0,0,1,0,0,1},  //5
 167   1          {1,0,0,1,1,0,0,1},  //4
 168   1          {0,0,0,0,1,1,0,1},  //3
 169   1          {0,0,1,0,0,1,0,1},  //2
 170   1          {1,0,0,1,1,1,1,1},  //1
 171   1        };
 172   1        
 173   1        segA2 = segments[valor][0];
 174   1        segB2 = segments[valor][1];
 175   1        segC2 = segments[valor][2];
 176   1        segD2 = segments[valor][3];
 177   1        segE2 = segments[valor][4];
C51 COMPILER V9.60.7.0   PROJETO                                                           05/23/2024 13:28:36 PAGE 4   

 178   1        segF2 = segments[valor][5];
 179   1        segG2 = segments[valor][6];
 180   1        segDP2 = segments[valor][7];
 181   1      }
 182          
 183          void displayResposta(unsigned char valor) {
 184   1        code unsigned segments[6][8] = {
 185   1          {0,0,0,1,0,0,0,1},  //A
 186   1          {1,1,0,0,0,0,0,1},  //B
 187   1          {0,1,1,0,0,0,1,1},  //C
 188   1          {1,0,0,0,0,1,0,1},  //D
 189   1          {1,1,1,1,1,1,0,1},  //-
 190   1          {1,1,1,1,1,1,0,0},  //-.
 191   1        };
 192   1        segA1 = segments[5][0];
 193   1        segB1 = segments[5][1];
 194   1        segC1 = segments[5][2];
 195   1        segD1 = segments[5][3];
 196   1        segE1 = segments[5][4];
 197   1        segF1 = segments[5][5];
 198   1        segG1 = segments[5][6];
 199   1        segDP1 = segments[5][7];  
 200   1        
 201   1        segA2 = segments[valor][0];
 202   1        segB2 = segments[valor][1];
 203   1        segC2 = segments[valor][2];
 204   1        segD2 = segments[valor][3];
 205   1        segE2 = segments[valor][4];
 206   1        segF2 = segments[valor][5];
 207   1        segG2 = segments[valor][6];
 208   1        segDP2 = segments[valor][7];
 209   1      }
 210          
 211          void main(void) {
 212   1        
 213   1        while (1) {
 214   2          Init();
 215   2          atualizaDisplay1(contaS);           //inicio comecar a 5.0
 216   2          atualizaDisplay2(contaDS);
 217   2          while (estado==0){                  //estado->0(Modo escolhe pergunta)/1(modo mostra pergunta)
 218   3            atualizaDisplay1(contaS);         //atualiza ao longo da execução o tempo
 219   3            atualizaDisplay2(contaDS);
 220   3          }
 221   2          while (estado==1){
 222   3            if(estadoOp==0){                  //estadoOp->0(Mostra segundos restantes)/1(mostra resposta)
 223   4              atualizaDisplay1(contaS);       //atualiza os displays com o tempo guardo anteriormente
 224   4              atualizaDisplay2(contaDS);
 225   4            }
 226   3            else{
 227   4              displayResposta(resposta);      //mostra a resposta
 228   4            }
 229   3          }
 230   2        }
 231   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    952    ----
   CONSTANT SIZE    =    352    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
C51 COMPILER V9.60.7.0   PROJETO                                                           05/23/2024 13:28:36 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
